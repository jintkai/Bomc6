<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.code.page.ibnmsConfig.kpilist.dao.KpiFormDao">
    <resultMap id="kpiMap" type="com.code.page.ibnmsConfig.kpilist.domain.KpiFormDomain">
        <result property="KPI_ID" column="KPI_ID"></result>
        <result property="KPI_NAME" column="KPI_NAME"></result>
    </resultMap>
    <select id="getKpiForm" parameterType="String" resultType="com.code.page.ibnmsConfig.kbplist.domain.KbpFormDomain">
        select * from TB_CDE_KBP where KBP_CLASS = #{KBP_CLASS}
    </select>

    <select id="getKpiByRowNum" parameterType="int" resultType="com.code.page.ibnmsConfig.kpilist.domain.KpiFormDomain">
        select * from (select rownum as row_num,t.* from tb_cde_kpi t ) b where  row_num=#{num}
    </select>

    <select id="getKpiList" parameterType="com.code.page.ibnmsConfig.kbplist.domain.KbpFormDomain" resultType="List"
            resultMap="kpiMap">
        select * from tb_cde_kpi t where 1=1
        <if test="KPI_ID!=null">
            AND (KPI_ID like '%${KPI_ID}%')
        </if>
        <if test="KPI_NAME!=null">
            AND KPI_NAME LIKE '%${KPI_NAME}%'
        </if>
        <if test="KBP_CLASS!=null">
            AND KBP_CLASS LIKE '${KBP_CLASS}%'
        </if>
    </select>

    <select id="getOneKpiById" resultType="com.code.page.ibnmsConfig.kpilist.domain.KpiFormDomain" >
        select * from (select length(t.KPI_ID) as l,t.* from TB_CDE_KPI t  order by l desc ) t2
        where rownum   =1
    </select>
    <select id="getOneKpiByCaption" resultType="com.code.page.ibnmsConfig.kbplist.domain.KbpFormDomain" >
        select * from (select length(t.KBP_CAPTION) as l,t.* from TB_CDE_KBP t  order by l desc ) t2
        where l is not null and rownum  =1
    </select>
    <select id="getKpiID" resultType="String" >
        select KBP_CLASS from (
        SELECT KBP_CLASS
        FROM (
        SELECT
        t.KBP_CLASS,
        substr(t.KBP_CLASS, 0, INSTR(t.KBP_CLASS, '-', '1')) AS ts
        FROM TB_CDE_KBP t
        ) t2
        WHERE t2.ts IS NULL
        ORDER BY t2.ts DESC
        ) GROUP BY KBP_CLASS
    </select>
</mapper>